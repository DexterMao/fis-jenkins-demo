package com.kakasure.bqf.dao.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class BalanceExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table yunear_balance
     *
     * @mbggenerated Tue Sep 27 15:14:42 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table yunear_balance
     *
     * @mbggenerated Tue Sep 27 15:14:42 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table yunear_balance
     *
     * @mbggenerated Tue Sep 27 15:14:42 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yunear_balance
     *
     * @mbggenerated Tue Sep 27 15:14:42 CST 2016
     */
    public BalanceExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yunear_balance
     *
     * @mbggenerated Tue Sep 27 15:14:42 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yunear_balance
     *
     * @mbggenerated Tue Sep 27 15:14:42 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yunear_balance
     *
     * @mbggenerated Tue Sep 27 15:14:42 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yunear_balance
     *
     * @mbggenerated Tue Sep 27 15:14:42 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yunear_balance
     *
     * @mbggenerated Tue Sep 27 15:14:42 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yunear_balance
     *
     * @mbggenerated Tue Sep 27 15:14:42 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yunear_balance
     *
     * @mbggenerated Tue Sep 27 15:14:42 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yunear_balance
     *
     * @mbggenerated Tue Sep 27 15:14:42 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yunear_balance
     *
     * @mbggenerated Tue Sep 27 15:14:42 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yunear_balance
     *
     * @mbggenerated Tue Sep 27 15:14:42 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table yunear_balance
     *
     * @mbggenerated Tue Sep 27 15:14:42 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUserIdIsNull() {
            addCriterion("USER_ID is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("USER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(String value) {
            addCriterion("USER_ID =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(String value) {
            addCriterion("USER_ID <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(String value) {
            addCriterion("USER_ID >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("USER_ID >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(String value) {
            addCriterion("USER_ID <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(String value) {
            addCriterion("USER_ID <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLike(String value) {
            addCriterion("USER_ID like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotLike(String value) {
            addCriterion("USER_ID not like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<String> values) {
            addCriterion("USER_ID in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<String> values) {
            addCriterion("USER_ID not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(String value1, String value2) {
            addCriterion("USER_ID between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(String value1, String value2) {
            addCriterion("USER_ID not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andBalanceIsNull() {
            addCriterion("BALANCE is null");
            return (Criteria) this;
        }

        public Criteria andBalanceIsNotNull() {
            addCriterion("BALANCE is not null");
            return (Criteria) this;
        }

        public Criteria andBalanceEqualTo(BigDecimal value) {
            addCriterion("BALANCE =", value, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceNotEqualTo(BigDecimal value) {
            addCriterion("BALANCE <>", value, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceGreaterThan(BigDecimal value) {
            addCriterion("BALANCE >", value, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("BALANCE >=", value, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceLessThan(BigDecimal value) {
            addCriterion("BALANCE <", value, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("BALANCE <=", value, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceIn(List<BigDecimal> values) {
            addCriterion("BALANCE in", values, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceNotIn(List<BigDecimal> values) {
            addCriterion("BALANCE not in", values, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("BALANCE between", value1, value2, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("BALANCE not between", value1, value2, "balance");
            return (Criteria) this;
        }

        public Criteria andCanPayIsNull() {
            addCriterion("CAN_PAY is null");
            return (Criteria) this;
        }

        public Criteria andCanPayIsNotNull() {
            addCriterion("CAN_PAY is not null");
            return (Criteria) this;
        }

        public Criteria andCanPayEqualTo(BigDecimal value) {
            addCriterion("CAN_PAY =", value, "canPay");
            return (Criteria) this;
        }

        public Criteria andCanPayNotEqualTo(BigDecimal value) {
            addCriterion("CAN_PAY <>", value, "canPay");
            return (Criteria) this;
        }

        public Criteria andCanPayGreaterThan(BigDecimal value) {
            addCriterion("CAN_PAY >", value, "canPay");
            return (Criteria) this;
        }

        public Criteria andCanPayGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("CAN_PAY >=", value, "canPay");
            return (Criteria) this;
        }

        public Criteria andCanPayLessThan(BigDecimal value) {
            addCriterion("CAN_PAY <", value, "canPay");
            return (Criteria) this;
        }

        public Criteria andCanPayLessThanOrEqualTo(BigDecimal value) {
            addCriterion("CAN_PAY <=", value, "canPay");
            return (Criteria) this;
        }

        public Criteria andCanPayIn(List<BigDecimal> values) {
            addCriterion("CAN_PAY in", values, "canPay");
            return (Criteria) this;
        }

        public Criteria andCanPayNotIn(List<BigDecimal> values) {
            addCriterion("CAN_PAY not in", values, "canPay");
            return (Criteria) this;
        }

        public Criteria andCanPayBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("CAN_PAY between", value1, value2, "canPay");
            return (Criteria) this;
        }

        public Criteria andCanPayNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("CAN_PAY not between", value1, value2, "canPay");
            return (Criteria) this;
        }

        public Criteria andPayingIsNull() {
            addCriterion("PAYING is null");
            return (Criteria) this;
        }

        public Criteria andPayingIsNotNull() {
            addCriterion("PAYING is not null");
            return (Criteria) this;
        }

        public Criteria andPayingEqualTo(BigDecimal value) {
            addCriterion("PAYING =", value, "paying");
            return (Criteria) this;
        }

        public Criteria andPayingNotEqualTo(BigDecimal value) {
            addCriterion("PAYING <>", value, "paying");
            return (Criteria) this;
        }

        public Criteria andPayingGreaterThan(BigDecimal value) {
            addCriterion("PAYING >", value, "paying");
            return (Criteria) this;
        }

        public Criteria andPayingGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("PAYING >=", value, "paying");
            return (Criteria) this;
        }

        public Criteria andPayingLessThan(BigDecimal value) {
            addCriterion("PAYING <", value, "paying");
            return (Criteria) this;
        }

        public Criteria andPayingLessThanOrEqualTo(BigDecimal value) {
            addCriterion("PAYING <=", value, "paying");
            return (Criteria) this;
        }

        public Criteria andPayingIn(List<BigDecimal> values) {
            addCriterion("PAYING in", values, "paying");
            return (Criteria) this;
        }

        public Criteria andPayingNotIn(List<BigDecimal> values) {
            addCriterion("PAYING not in", values, "paying");
            return (Criteria) this;
        }

        public Criteria andPayingBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PAYING between", value1, value2, "paying");
            return (Criteria) this;
        }

        public Criteria andPayingNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PAYING not between", value1, value2, "paying");
            return (Criteria) this;
        }

        public Criteria andPaiedIsNull() {
            addCriterion("PAIED is null");
            return (Criteria) this;
        }

        public Criteria andPaiedIsNotNull() {
            addCriterion("PAIED is not null");
            return (Criteria) this;
        }

        public Criteria andPaiedEqualTo(BigDecimal value) {
            addCriterion("PAIED =", value, "paied");
            return (Criteria) this;
        }

        public Criteria andPaiedNotEqualTo(BigDecimal value) {
            addCriterion("PAIED <>", value, "paied");
            return (Criteria) this;
        }

        public Criteria andPaiedGreaterThan(BigDecimal value) {
            addCriterion("PAIED >", value, "paied");
            return (Criteria) this;
        }

        public Criteria andPaiedGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("PAIED >=", value, "paied");
            return (Criteria) this;
        }

        public Criteria andPaiedLessThan(BigDecimal value) {
            addCriterion("PAIED <", value, "paied");
            return (Criteria) this;
        }

        public Criteria andPaiedLessThanOrEqualTo(BigDecimal value) {
            addCriterion("PAIED <=", value, "paied");
            return (Criteria) this;
        }

        public Criteria andPaiedIn(List<BigDecimal> values) {
            addCriterion("PAIED in", values, "paied");
            return (Criteria) this;
        }

        public Criteria andPaiedNotIn(List<BigDecimal> values) {
            addCriterion("PAIED not in", values, "paied");
            return (Criteria) this;
        }

        public Criteria andPaiedBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PAIED between", value1, value2, "paied");
            return (Criteria) this;
        }

        public Criteria andPaiedNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PAIED not between", value1, value2, "paied");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table yunear_balance
     *
     * @mbggenerated do_not_delete_during_merge Tue Sep 27 15:14:42 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table yunear_balance
     *
     * @mbggenerated Tue Sep 27 15:14:42 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}